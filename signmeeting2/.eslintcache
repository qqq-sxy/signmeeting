[{"E:\\项目\\SIGNMEETING\\signmeeting\\src\\Components\\EmailLogin.js":"1","E:\\项目\\SIGNMEETING\\signmeeting\\src\\Components\\Signout.js":"2","E:\\项目\\SIGNMEETING\\signmeeting\\src\\Components\\Signin.js":"3","E:\\项目\\SIGNMEETING\\signmeeting\\src\\Pages\\Meeting.js":"4","E:\\项目\\SIGNMEETING\\signmeeting\\src\\Pages\\Index.js":"5","E:\\项目\\SIGNMEETING\\signmeeting\\src\\index.js":"6","E:\\项目\\SIGNMEETING\\signmeeting\\src\\Pages\\LocationCheckIn.js":"7","E:\\项目\\SIGNMEETING\\signmeeting\\src\\Pages\\SigninOut.js":"8"},{"size":3502,"mtime":1622551547096,"results":"9","hashOfConfig":"10"},{"size":5277,"mtime":1622551615331,"results":"11","hashOfConfig":"10"},{"size":3803,"mtime":1622551596408,"results":"12","hashOfConfig":"10"},{"size":26380,"mtime":1622546742383,"results":"13","hashOfConfig":"10"},{"size":2261,"mtime":1615461045566,"results":"14","hashOfConfig":"10"},{"size":711,"mtime":1615461041216,"results":"15","hashOfConfig":"10"},{"size":10788,"mtime":1622533940889,"results":"16","hashOfConfig":"10"},{"size":1310,"mtime":1622546751469,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gtw8gv",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\项目\\SIGNMEETING\\signmeeting\\src\\Components\\EmailLogin.js",[],"E:\\项目\\SIGNMEETING\\signmeeting\\src\\Components\\Signout.js",[],"E:\\项目\\SIGNMEETING\\signmeeting\\src\\Components\\Signin.js",[],"E:\\项目\\SIGNMEETING\\signmeeting\\src\\Pages\\Meeting.js",[],"E:\\项目\\SIGNMEETING\\signmeeting\\src\\Pages\\Index.js",[],"E:\\项目\\SIGNMEETING\\signmeeting\\src\\index.js",[],"E:\\项目\\SIGNMEETING\\signmeeting\\src\\Pages\\LocationCheckIn.js",["35","36","37","38"],"import React,{Fragment,useEffect} from 'react'\r\nimport '../Styles/LocationCheckIn.css'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction LocationCheckIn ()  {\r\n\r\n\t\r\n\r\n\r\n\tconst getLocation = () => {\r\n\t\tconsole.log('ghdfiyuq');\r\n\t\t//开启SDK辅助定位\r\n\t\tconst {BMap,BMAP_STATUS_SUCCESS,BMAP_ANCHOR_TOP_LEFT}=window;\r\n\t\tvar map = new BMap.Map(\"allmap\");\r\n\t\tvar geolocation = new BMap.Geolocation();\r\n\t\tgeolocation.enableSDKLocation();\r\n\t\tgeolocation.getCurrentPosition(function(r)\t{\r\n\t\t\tif(this.getStatus() == BMAP_STATUS_SUCCESS){\r\n\t\t\t\tvar mk = new BMap.Marker(r.point);\r\n\t\t\t\tmap.addOverlay(mk);\r\n\t\t\t\tmap.panTo(r.point);\r\n\t\t\t\talert('您的位置：'+r.point.lng+','+r.point.lat);//先经度，后维度\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\talert('failed'+this.getStatus());\r\n\t\t\t}  \r\n\t\t})      \r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log('hhh');\r\n\t\tconst {BMap,BMAP_STATUS_SUCCESS,BMAP_ANCHOR_TOP_LEFT}=window;\r\n\t\tvar map = new BMap.Map(\"allmap\");\r\n\t    var point = new BMap.Point(108.96821,34.28394); //这里使用BMap命名空间下的Point类  来创建一个坐标点  其中116.404表示经度，39.915表示维度\r\n\t\tmap.centerAndZoom(point, 19);//地图初始化，此方法用于设置中心点坐标和地图级别且地图必须经过初始化才可以执行其他操作\r\n\t\tmap.enableScrollWheelZoom(true);//设置鼠标滚轮缩放\r\n\t\tmap.enableInertialDragging();//启用地图惯性拖拽，默认禁止\r\n\t\tmap.enableContinuousZoom();//启用连续缩放效果，默认禁止\r\n\t\t \r\n\t\t\r\n\r\n\t})\r\n\r\n\t\r\n\t\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div id=\"allmap\"></div>\r\n\t\t\t<input type=\"button\" value=\"位置签到\" onClick={getLocation}></input>\r\n\r\n\r\n\r\n\t\t\r\n\r\n\r\n\t\t</Fragment>\r\n\t)\r\n}\r\n\r\nexport default LocationCheckIn\r\n\r\n\r\n// import  React,{Component,Fragment} from 'react';\r\n// import axios from 'axios'\r\n// import '../Styles/LocationCheckIn.css'\r\n\r\n//  class LocationCheckIn extends Component{ \r\n// \tconstructor(props) {\r\n//         super(props)\r\n// \t}\r\n//     componentDidMount () {\r\n// \t\tconst {BMap,BMAP_STATUS_SUCCESS,BMAP_ANCHOR_TOP_LEFT}=window;\r\n// \t\tvar map = new BMap.Map(\"allmap\");//创建Map实例，通过BMap命名空间下的Map类表示地图，通过new 操作符  可以创建一个地图实例，其参数可以是元素id也可是是元素对象\r\n// \t\tvar point = new BMap.Point(108.90740,34.15902); //这里使用BMap命名空间下的Point类  来创建一个坐标点  其中116.404表示经度，39.915表示维度\r\n// \t\tmap.centerAndZoom(point, 14);//地图初始化，此方法用于设置中心点坐标和地图级别且地图必须经过初始化才可以执行其他操作\r\n// \t\tmap.enableScrollWheelZoom();//设置鼠标滚轮缩放\r\n// \t\tmap.enableInertialDragging();//启用地图惯性拖拽，默认禁止\r\n// \t\tmap.enableContinuousZoom();//启用连续缩放效果，默认禁止\r\n\r\n// \t\t var size = new BMap.Size(10, 20);\r\n// \t\t map.addControl(new BMap.CityListControl({\r\n// \t\t\t anchor: BMAP_ANCHOR_TOP_LEFT,\r\n// \t\t\t offset: size,\r\n// \t\t }));\r\n\t\t\r\n\r\n// \t//将维度传到后台\r\n\t\t\r\n\r\n// \t\t\tvar geolocation = new BMap.Geolocation();\r\n// \t\t\t// 开启SDK辅助定位\r\n// \t\t\tgeolocation.enableSDKLocation();\r\n// \t\t\tgeolocation.getCurrentPosition(function(r){\r\n// \t\t\tif(this.getStatus() == BMAP_STATUS_SUCCESS){\r\n// \t\t\t\tvar mk = new BMap.Marker(r.point);\r\n// \t\t\t\tmap.addOverlay(mk);\r\n// \t\t\t\tmap.panTo(r.point);\r\n// \t\t\t\tconsole.log('您的位置：'+r.point.lng+','+r.point.lat);\r\n// \t\t\t}\r\n// \t\t\telse {\r\n// \t\t\t\tconsole.log('failed'+this.getStatus());\r\n// \t\t\t}        \r\n// \t\t});\r\n// \t\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t// var data5 = {\r\n\t\t// \tpointLng:lng,\r\n\t\t// \tpointLat:lat\r\n\t\t// }\r\n\t\t// axios.post('http://localhost:8000/Index/LocationCheckIn',\r\n\t\t// \t{data5:JSON.stringify(data5)},\r\n\t\t// \t{Headers:{'Content-Type' : 'application/json'}})\r\n\t\t// \t.then((res) =>{alert(res.data)})\r\n\t\t// \t.catch((err) => {console.log(err);})\r\n\t\r\n\t\t\r\n\t\r\n\t\r\n\t \r\n// \t render(){\r\n// \t\t return (\r\n// \t\t\t <Fragment>\r\n// \t\t\t  <div id={\"allmap\"} className=\"location\"></div>\r\n// \t\t\t  <input type=\"button\" value=\"位置签到\" className=\"qiandao\" ></input>\r\n// \t\t\t</Fragment>\r\n// \t\t )\r\n// \t }\r\n// }\r\n// export default LocationCheckIn\r\n\r\n\r\n\r\n\r\n\r\n// var lat = 0;\r\n// var lng = 0;\r\n\r\n// class LocationCheckIn extends Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             lat: '',//自身纬度\r\n//             lng: '',//自身经度\r\n//         }\r\n//     }\r\n\r\n// \tcomponentDidMount(){\r\n//         var type3 = [550, 30];//设定  google  gps格式转换\r\n//         var transTypesParam = \"\";\r\n//         const _this = this;\r\n//         function getLocation() {\r\n//             var options = {\r\n//                 enableHighAccuracy: true,\r\n//                 timeout: 5000,\r\n//                 maximumAge: 0\r\n//             };\r\n//             if (navigator.geolocation) { //用浏览器获取坐标地址\r\n//                 navigator.geolocation.getCurrentPosition(showPosition, showError, options);\r\n//             } else {\r\n//                 alert(\"浏览器不支持地理定位!\");\r\n//             }\r\n//         }\r\n\r\n\r\n// \t\t //获取浏览器GPS成功\r\n// \t\t function showPosition(position) {\r\n//             var x = position.coords.longitude; //经度 \r\n//             var y = position.coords.latitude;//纬度 \r\n\r\n//             transTypesParam = getTransType(position.coords.accuracy);//该方法很重要，用来判断手机定位格式，方法在下方\r\n//             var BMap = window.BMap;\r\n//             var ggPoint = new BMap.Point(x, y);\r\n//             showMap(ggPoint, true);//显示地图坐标\r\n//         }\r\n\r\n\t\t\r\n//         //获取失败，失败后用百度地图自带的方法，但是定位会不准\r\n//         function showError(error) {\r\n//             var BMap = window.BMap;\r\n//             var geolocation = new BMap.Geolocation();\r\n//             geolocation.getCurrentPosition(function (r) {\r\n//                 if (this.getStatus() == 'BMAP_STATUS_SUCCESS') {\r\n//                     showMap(r.point, false);\r\n//                 }\r\n//                 else {\r\n//                     //向后台传值经纬度  此位GPRS定位失败后走的方法，如果GPRS定位成功，这不走此方法\r\n//                      home.index({ longitude: r.longitude, latitude: r.latitude }).then((result) => {\r\n//                         if (result.code === 1) {\r\n//                             _this.setState({\r\n//                                 data: result.data,\r\n//                             })\r\n//                         } else { Toast.offline(result.msg, 1) }\r\n//                     })  \r\n//                     alert('定位失败1：' + this.getStatus());\r\n//                 }\r\n//             }, { enableHighAccuracy: true })\r\n\r\n// \t\t\tswitch (error.code) {\r\n//                 case error.PERMISSION_DENIED:\r\n//                     alert(\"用户拒绝了地理定位请求\");\r\n//                     //$(\"#testInfo\").html(error.code + \"User denied the request for Geolocation.\");\r\n//                     break;\r\n//                 case error.POSITION_UNAVAILABLE:\r\n//                     alert(\"位置信息不可用\");\r\n//                     //$(\"#testInfo\").html(error.code + \"Location information is unavailable.\");\r\n//                     break;\r\n//                 case error.TIMEOUT:\r\n//                     alert(\"获取用户位置的请求超时\");\r\n//                     //$(\"#testInfo\").html(error.code + \"The request to get user location timed out.\");\r\n//                     break;\r\n//                 case error.UNKNOWN_ERROR:\r\n//                     alert(\"发生未知错误\");\r\n//                     //$(\"#testInfo\").html(error.code + \"An unknown error occurred.\");\r\n//                     break;\r\n//             }\r\n\r\n//         }\r\n\r\n// \t\t// 用来判断手机定位格式\r\n//         function getTransType(accuracy) {\r\n//             if (window.localStorage) {\r\n//                 var transType = localStorage.getItem(\"xdlcfwapp_transType\");\r\n//                 if (transType != null && transType != \"\") {\r\n//                     return transType;\r\n//                 }\r\n//             }\r\n\r\n//             for (var i = 0; i < type3.length; i++) {\r\n//                 if (type3[i] == accuracy) {\r\n//                     localStorage.setItem(\"xdlcfwapp_transType\", 3);\r\n//                     return 3;\r\n//                 }\r\n//             }\r\n//             localStorage.setItem(\"xdlcfwapp_transType\", 1);\r\n//             return 1;\r\n//         };\r\n\r\n// \t\tvar bm = null;\r\n//         function showMap(ggPoint, isTrans) {\r\n//             // 百度地图API功能\r\n//             var BMap = window.BMap;\r\n//             bm = new BMap.Map(\"allmap\");\r\n//             bm.centerAndZoom(ggPoint, 15);\r\n//             bm.enableScrollWheelZoom(true);\r\n//             if (isTrans) {\r\n//                 bm.addControl(new BMap.NavigationControl());\r\n//                 //坐标转换完之后的回调函数\r\n//                 var translateCallback = function (data) {\r\n//                     if (data.status === 0) {\r\n//                         alert(JSON.stringify(data));//弹出的数据是一个对象，需要取值经纬度\r\n//                         lng = data.points && data.points.length > 0 ? data.points[0].lng : '';\r\n//                         lat = data.points && data.points.length > 0 ? data.points[0].lat : '';\r\n//                         alert(JSON.stringify(data.points[0].lng));\r\n//                         alert(JSON.stringify(data.points[0].lat));\r\n//                         //向后台传值经纬度  如果GPRS定位成功，程序走的此方法\r\n//                         home.index({ longitude: lng, latitude: lat }).then((result) => {\r\n//                             if (result.code === 1) {\r\n//                                 _this.setState({\r\n//                                     data: result.data,\r\n//                                 })\r\n//                             } else { Toast.offline(result.msg, 1) }\r\n//                         })\r\n//                     } else {\r\n//                         //  alert(\"经纬度：333333333=====\"+transTypesParam);\r\n//                     }\r\n//                 }\r\n\r\n// \t\t\t\tsetTimeout(function () {\r\n//                     var convertor = new BMap.Convertor();\r\n//                     var pointArr = [];\r\n//                     pointArr.push(ggPoint);\r\n//                     convertor.translate(pointArr, transTypesParam, 5, translateCallback);\r\n//                 }, 1000)\r\n//             } else {\r\n//                 alert(\"经纬度：\" + ggPoint.lng + \",\" + ggPoint.lat);\r\n//             }\r\n//         }\r\n//         getLocation();\r\n//     }\r\n//     render() {\r\n        \r\n//         return (\r\n//             <div >\r\n//                 <div id=\"allmap\" style={{ width: 0, height: 0 }}></div>\r\n//             </div>\r\n//         );\r\n//     }\r\n\r\n// }","E:\\项目\\SIGNMEETING\\signmeeting\\src\\Pages\\SigninOut.js",[],{"ruleId":"39","severity":1,"message":"40","line":21,"column":35,"nodeType":"41","messageId":"42","endLine":21,"endColumn":55},{"ruleId":"43","severity":1,"message":"44","line":26,"column":24,"nodeType":"45","messageId":"46","endLine":26,"endColumn":26},{"ruleId":"39","severity":1,"message":"47","line":40,"column":15,"nodeType":"41","messageId":"42","endLine":40,"endColumn":34},{"ruleId":"39","severity":1,"message":"40","line":40,"column":35,"nodeType":"41","messageId":"42","endLine":40,"endColumn":55},"no-unused-vars","'BMAP_ANCHOR_TOP_LEFT' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'BMAP_STATUS_SUCCESS' is assigned a value but never used."]